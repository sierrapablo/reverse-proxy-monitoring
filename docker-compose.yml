services:
  reverse-proxy:
    build:
      context: .
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d/:/etc/nginx/conf.d/
      - ./ssl:/etc/nginx/ssl:ro
      - ./.htpasswd:/etc/nginx/.htpasswd:ro
    restart: always
    networks:
      - reverse-proxy
    depends_on:
      - prometheus
      - grafana

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: nginx-exporter
    command:
      - '--nginx.scrape-uri=http://reverse-proxy:8080/nginx_status'
    ports:
      - "9113:9113"
    restart: always
    depends_on:
      - reverse-proxy
    networks:
      - reverse-proxy

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: always
    networks:
      - reverse-proxy
    pid: "host"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - reverse-proxy
    restart: always

  grafana:
    image: grafana/grafana
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    restart: always
    networks:
      - reverse-proxy

volumes:
  grafana_data:

networks:
  reverse-proxy:
    name: reverse-proxy
    driver: bridge

